{"version":3,"sources":["Navigator.js","Content.js","Header.js","SourcesUpload.js","Paperbase.js","theme.js","fakeserver.js","index.js"],"names":["categories","id","children","icon","active","withStyles","theme","categoryHeader","paddingTop","spacing","paddingBottom","categoryHeaderPrimary","color","palette","common","white","item","backgroundColor","itemCategory","boxShadow","firebase","fontSize","itemActiveItem","itemPrimary","itemIcon","minWidth","marginRight","divider","marginTop","props","classes","other","Drawer","variant","List","disablePadding","ListItem","className","clsx","map","Fragment","key","ListItemText","primary","childId","style","textDecoration","to","toLowerCase","button","ListItemIcon","Divider","paper","maxWidth","margin","overflow","searchBar","borderBottom","searchInput","typography","block","display","addUser","contentWrapper","Paper","AppBar","position","elevation","Toolbar","Grid","container","alignItems","xs","TextField","fullWidth","placeholder","InputProps","disableUnderline","Button","Tooltip","title","IconButton","Typography","align","titles","help","secondaryBar","zIndex","toolbar","marginBottom","menuButton","marginLeft","iconButtonAvatar","padding","link","borderColor","match","onDrawerToggle","useRouteMatch","console","log","component","path","BasicTreeData","React","useState","filesInUploadDir","setFilesInUploadDir","useSWR","fetch","data","error","a","async","bodyUsed","json","i","files","directories","Number","split","filename","pop","join","hasOwnProperty","Object","keys","length","directory","joined","parentId","push","endsWith","parseData","columns","field","removable","type","parentChildData","row","rows","find","options","selection","DropzoneAreaExample","state","this","setState","dropzoneText","showFileNames","acceptedFiles","onChange","handleChange","bind","Component","disabled","createMuiTheme","light","main","dark","h5","fontWeight","letterSpacing","shape","borderRadius","MuiTab","disableRipple","mixins","minHeight","overrides","MuiDrawer","MuiButton","label","textTransform","contained","MuiTabs","root","indicator","height","borderTopLeftRadius","borderTopRightRadius","breakpoints","up","MuiIconButton","MuiTooltip","tooltip","MuiDivider","MuiListItemText","fontWeightMedium","MuiListItemIcon","MuiAvatar","width","styles","drawer","flexShrink","app","flex","flexDirection","background","footer","mobileOpen","setMobileOpen","handleDrawerToggle","ThemeProvider","CssBaseline","Hidden","smUp","implementation","PaperProps","open","onClose","xsDown","SourcesUpload","render","location","pathname","from","secondary","red","A400","default","server","Server","routes","namespace","get","size","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.9b590766.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport DnsRoundedIcon from '@material-ui/icons/DnsRounded';\nimport PublicIcon from '@material-ui/icons/Public';\nimport SettingsEthernetIcon from '@material-ui/icons/SettingsEthernet';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport BlurOnIcon from '@material-ui/icons/BlurOn';\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport ListIcon from '@material-ui/icons/List';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport FunctionsIcon from '@material-ui/icons/Functions';\nimport AllInclusiveIcon from '@material-ui/icons/AllInclusive';\nimport DeveloperBoardIcon from '@material-ui/icons/DeveloperBoard';\nimport AppsIcon from '@material-ui/icons/Apps';\n\nconst categories = [\n  {\n    id: 'Sources',\n    children: [\n      { id: 'Upload', icon: <CloudUploadIcon />, active: true },\n      { id: 'Configure', icon: <DnsRoundedIcon /> },\n      { id: 'Explore', icon: <ListIcon /> },\n    ],\n  },\n  {\n    id: 'Models',\n    children: [\n      { id: 'Configure', icon: <DeveloperBoardIcon /> },\n      { id: 'Train', icon: <FunctionsIcon /> },\n      { id: 'Predict', icon: <AllInclusiveIcon /> },\n    ],\n  },\n  {\n    id: 'Operations',\n    children: [\n      { id: 'View', icon: <AppsIcon /> },\n      { id: 'Create', icon: <DesktopMacIcon /> },\n      { id: 'Run', icon: <PlayArrowIcon /> },\n    ],\n  },\n  {\n    id: 'Dataflows',\n    children: [\n      { id: 'View', icon: <BlurOnIcon /> },\n      { id: 'Create', icon: <LayersIcon /> },\n      { id: 'Run', icon: <SettingsEthernetIcon /> },\n      { id: 'Deploy', icon: <PublicIcon /> },\n    ],\n  },\n  {\n    id: 'Settings',\n    children: [\n      { id: 'Backend', icon: <SettingsIcon /> },\n    ],\n  },\n];\n\nconst styles = theme => ({\n  categoryHeader: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  categoryHeaderPrimary: {\n    color: theme.palette.common.white,\n  },\n  item: {\n    paddingTop: 1,\n    paddingBottom: 1,\n    color: 'rgba(255, 255, 255, 0.7)',\n    '&:hover,&:focus': {\n      backgroundColor: 'rgba(255, 255, 255, 0.08)',\n    },\n  },\n  itemCategory: {\n    backgroundColor: '#232f3e',\n    boxShadow: '0 -1px 0 #404854 inset',\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n  firebase: {\n    fontSize: 24,\n    color: theme.palette.common.white,\n  },\n  itemActiveItem: {\n    color: '#4fc3f7',\n  },\n  itemPrimary: {\n    fontSize: 'inherit',\n  },\n  itemIcon: {\n    minWidth: 'auto',\n    marginRight: theme.spacing(2),\n  },\n  divider: {\n    marginTop: theme.spacing(2),\n  },\n});\n\nfunction Navigator(props) {\n  const { classes, ...other } = props;\n\n  return (\n    <Drawer variant=\"permanent\" {...other} >\n      <List disablePadding >\n        <ListItem className={clsx(classes.firebase, classes.item, classes.itemCategory)}>\n          DFFML\n        </ListItem>\n        {categories.map(({ id, children }) => (\n          <React.Fragment key={id}>\n            <ListItem className={classes.categoryHeader}>\n              <ListItemText\n                classes={{\n                  primary: classes.categoryHeaderPrimary,\n                }}\n              >\n                {id}\n              </ListItemText>\n            </ListItem>\n            {children.map(({ id: childId, icon, active }) => (\n              <Link\n                key={childId}\n                style={{ textDecoration: 'none' }}\n                to={\"/\" + id.toLowerCase() + \"/\" + childId.toLowerCase()}\n              >\n                <ListItem\n                  button\n                  className={clsx(classes.item, active && classes.itemActiveItem)}\n                >\n                  <ListItemIcon className={classes.itemIcon}>{icon}</ListItemIcon>\n                  <ListItemText\n                    classes={{\n                      primary: classes.itemPrimary,\n                    }}\n                  >\n                    {childId}\n                  </ListItemText>\n                </ListItem>\n              </Link>\n            ))}\n\n            <Divider className={classes.divider} />\n          </React.Fragment>\n        ))}\n      </List>\n    </Drawer>\n  );\n}\n\nNavigator.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Navigator);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nfunction Content(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.paper}>\n      <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n        <Toolbar>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item>\n              <SearchIcon className={classes.block} color=\"inherit\" />\n            </Grid>\n            <Grid item xs>\n              <TextField\n                fullWidth\n                placeholder=\"Search by email address, phone number, or user UID\"\n                InputProps={{\n                  disableUnderline: true,\n                  className: classes.searchInput,\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" className={classes.addUser}>\n                Add user\n              </Button>\n              <Tooltip title=\"Reload\">\n                <IconButton>\n                  <RefreshIcon className={classes.block} color=\"inherit\" />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.contentWrapper}>\n        <Typography color=\"textSecondary\" align=\"center\">\n          No users for this project yet\n        </Typography>\n      </div>\n    </Paper>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport HelpIcon from '@material-ui/icons/Help';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useRouteMatch } from \"react-router-dom\";\n\nconst lightColor = 'rgba(255, 255, 255, 0.7)';\n\nconst styles = theme => ({\n  secondaryBar: {\n    zIndex: 0,\n  },\n  toolbar: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  menuButton: {\n    marginLeft: -theme.spacing(1),\n  },\n  iconButtonAvatar: {\n    padding: 4,\n  },\n  link: {\n    textDecoration: 'none',\n    color: lightColor,\n    '&:hover': {\n      color: theme.palette.common.white,\n    },\n  },\n  button: {\n    borderColor: lightColor,\n  },\n});\n\nconst titles = {\n  \"/sources/upload\": {\n    title: \"Files and Uploads\",\n    // TODO Use help links with HelpIcon / IconButton\n    help: \"https://intel.github.io/dffml/webui/help/for/sources\",\n  },\n  \"/sources/configure\": {\n    title: \"Configure Data Sources\",\n    // TODO Use help links with HelpIcon / IconButton\n    help: \"https://intel.github.io/dffml/webui/help/for/sources\",\n  },\n  \"/sources/explore\": {\n    title: \"Explore Data Sources\",\n    // TODO Use help links with HelpIcon / IconButton\n    help: \"https://intel.github.io/dffml/webui/help/for/sources\",\n  },\n};\n\nfunction Header(props) {\n  const { classes, onDrawerToggle } = props;\n\n  let match = useRouteMatch();\n\n  console.log(match);\n\n  return (\n    <React.Fragment>\n      <AppBar\n        component=\"div\"\n        className={classes.secondaryBar}\n        color=\"primary\"\n        position=\"static\"\n        elevation={0}\n      >\n        <Toolbar className={classes.toolbar}>\n          <Grid container alignItems=\"center\" spacing={1}>\n            <Grid item xs>\n              <Typography color=\"inherit\" variant=\"h5\" component=\"h1\">\n                {titles[match.path].title}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Tooltip title=\"Help\">\n                <IconButton color=\"inherit\">\n                  <HelpIcon />\n                </IconButton>\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport MaterialTable from 'material-table';\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport useSWR from 'swr';\n\nconst styles = theme => ({\n  paper: {\n    maxWidth: 936,\n    margin: 'auto',\n    overflow: 'hidden',\n  },\n  searchBar: {\n    borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\n  },\n  searchInput: {\n    fontSize: theme.typography.fontSize,\n  },\n  block: {\n    display: 'block',\n  },\n  addUser: {\n    marginRight: theme.spacing(1),\n  },\n  contentWrapper: {\n    margin: '40px 16px',\n  },\n});\n\nasync function parseData(data, setFilesInUploadDir) {\n  if (data.bodyUsed) {\n    return\n  }\n\n  var files = await data.json();\n\n  var directories = {};\n\n  for (var i in files) {\n    files[i].id = Number(i);\n\n    var split = files[i].filename.split(\"/\");\n\n    split.pop();\n\n    directories[split.join(\"/\") + \"/\"] = true;\n  }\n\n  if (directories.hasOwnProperty(\"/\")) {\n    delete directories[\"/\"];\n  }\n\n  for (var i = 0; i < Object.keys(directories).length; i++) {\n    directories[Object.keys(directories)[i]] = files.length + i;\n  }\n\n  for (var i in directories) {\n    var split = i.split(\"/\");\n\n    split.pop();\n\n    var directory = {\n      id: directories[i],\n      filename: split[split.length - 1] + \"/\",\n    }\n    split.pop();\n\n    var joined = split.join(\"/\") + \"/\";\n\n    if (directories.hasOwnProperty(joined)) {\n      directory.parentId = directories[joined];\n    }\n\n    files.push(directory);\n  }\n\n  for (var i in files) {\n    if (files[i].filename.endsWith(\"/\")) {\n      continue;\n    }\n\n    var split = files[i].filename.split(\"/\");\n\n    files[i].filename = split[split.length - 1];\n\n    split.pop();\n\n    var joined = split.join(\"/\") + \"/\";\n\n    if (directories.hasOwnProperty(joined)) {\n      files[i].parentId = directories[joined];\n    }\n  }\n\n  console.log(files);\n\n  setFilesInUploadDir(files);\n}\n\nfunction BasicTreeData() {\n    const [filesInUploadDir, setFilesInUploadDir] = React.useState([]);\n    // TODO Change this URL\n    const { data, error } = useSWR('/api/service/files', fetch)\n\n    if (error) return <div>failed to load</div>\n    if (!data) return <div>loading...</div>\n\n    parseData(data, setFilesInUploadDir);\n\n    return (\n      <MaterialTable\n        title=\"Files\"\n        data={filesInUploadDir}\n        columns={[\n          { title: 'Filename', field: 'filename', removable: false },\n          { title: 'Size (MB)', field: 'size', type: 'numeric' },\n        ]}\n        parentChildData={(row, rows) => rows.find(a => a.id === row.parentId)}\n        options={{\n          selection: true,\n        }}\n      />\n    )\n}\n\nclass DropzoneAreaExample extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      files: []\n    };\n  }\n  handleChange(files){\n    this.setState({\n      files: files\n    });\n  }\n  render(){\n    return (\n      <DropzoneArea\n        dropzoneText=\"Drag and drop a file here or click\"\n        showFileNames={true}\n        acceptedFiles={[]}\n        onChange={this.handleChange.bind(this)}\n      />\n    )\n  }\n}\n\nfunction Content(props) {\n  const { classes } = props;\n\n  return (\n    <React.Fragment>\n      <Paper className={classes.paper}>\n        <DropzoneAreaExample />\n        <AppBar className={classes.searchBar} position=\"static\" color=\"default\" elevation={0}>\n          <Toolbar>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs>\n                <TextField\n                  fullWidth\n                  placeholder=\"Path to place file at\"\n                  InputProps={{\n                    disableUnderline: true,\n                    className: classes.searchInput,\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <Button disabled={true} variant=\"contained\" color=\"primary\" className={classes.addUser}>\n                  Upload File\n                </Button>\n                <Tooltip title=\"Reload\">\n                  <IconButton>\n                    <RefreshIcon className={classes.block} color=\"inherit\" />\n                  </IconButton>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n      </Paper>\n      <br />\n      <Paper className={classes.paper}>\n        <BasicTreeData />\n      </Paper>\n    </React.Fragment>\n  );\n}\n\nContent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Content);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Hidden from '@material-ui/core/Hidden';\nimport Typography from '@material-ui/core/Typography';\nimport Navigator from './Navigator';\nimport Content from './Content';\nimport Header from './Header';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n\nimport SourcesUpload from './SourcesUpload';\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#63ccff',\n      main: '#009be5',\n      dark: '#006db3',\n    },\n  },\n  typography: {\n    h5: {\n      fontWeight: 500,\n      fontSize: 26,\n      letterSpacing: 0.5,\n    },\n  },\n  shape: {\n    borderRadius: 8,\n  },\n  props: {\n    MuiTab: {\n      disableRipple: true,\n    },\n  },\n  mixins: {\n    toolbar: {\n      minHeight: 48,\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  overrides: {\n    MuiDrawer: {\n      paper: {\n        backgroundColor: '#18202c',\n      },\n    },\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n      contained: {\n        boxShadow: 'none',\n        '&:active': {\n          boxShadow: 'none',\n        },\n      },\n    },\n    MuiTabs: {\n      root: {\n        marginLeft: theme.spacing(1),\n      },\n      indicator: {\n        height: 3,\n        borderTopLeftRadius: 3,\n        borderTopRightRadius: 3,\n        backgroundColor: theme.palette.common.white,\n      },\n    },\n    MuiTab: {\n      root: {\n        textTransform: 'none',\n        margin: '0 16px',\n        minWidth: 0,\n        padding: 0,\n        [theme.breakpoints.up('md')]: {\n          padding: 0,\n          minWidth: 0,\n        },\n      },\n    },\n    MuiIconButton: {\n      root: {\n        padding: theme.spacing(1),\n      },\n    },\n    MuiTooltip: {\n      tooltip: {\n        borderRadius: 4,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#404854',\n      },\n    },\n    MuiListItemText: {\n      primary: {\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        color: 'inherit',\n        marginRight: 0,\n        '& svg': {\n          fontSize: 20,\n        },\n      },\n    },\n    MuiAvatar: {\n      root: {\n        width: 32,\n        height: 32,\n      },\n    },\n  },\n};\n\nconst drawerWidth = 256;\n\nconst styles = {\n  root: {\n    display: 'flex',\n    minHeight: '100vh',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  app: {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  main: {\n    flex: 1,\n    padding: theme.spacing(6, 4),\n    background: '#eaeff1',\n  },\n  footer: {\n    padding: theme.spacing(2),\n    background: '#eaeff1',\n  },\n};\n\nconst DEFAULT_VIEW_ROUTE = \"sources/upload\";\n\nfunction Paperbase(props) {\n  const { classes } = props;\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div className={classes.root}>\n          <CssBaseline />\n          <nav className={classes.drawer}>\n            <Hidden smUp implementation=\"js\">\n              <Navigator\n                PaperProps={{ style: { width: drawerWidth } }}\n                variant=\"temporary\"\n                open={mobileOpen}\n                onClose={handleDrawerToggle}\n              />\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n              <Navigator PaperProps={{ style: { width: drawerWidth } }} />\n            </Hidden>\n          </nav>\n          <div className={classes.app}>\n            <Switch>\n              // Begin the views\n              <Route path=\"/sources/upload\">\n                <Header onDrawerToggle={handleDrawerToggle} />\n                <main className={classes.main}>\n                  <SourcesUpload />\n                </main>\n              </Route>\n              // When URL path is / redirect to the default route\n              <Route\n                path=\"/\"\n                render={({ location }) => (\n                  <Redirect\n                    to={{\n                      pathname: \"/\" + DEFAULT_VIEW_ROUTE,\n                      state: { from: location }\n                    }}\n                  />\n                )}\n              />\n            </Switch>\n            <footer className={classes.footer}>\n            </footer>\n          </div>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nPaperbase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Paperbase);\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About() {\n  return <h2>About</h2>;\n}\n\nfunction Topics() {\n  let match = useRouteMatch();\n\n  return (\n    <div>\n      <h2>Topics</h2>\n\n      <ul>\n        <li>\n          <Link to={`${match.url}/components`}>Components</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/props-v-state`}>\n            Props v. State\n          </Link>\n        </li>\n      </ul>\n\n      {/* The Topics page has its own <Switch> with more routes\n          that build on the /topics URL path. You can think of the\n          2nd <Route> here as an \"index\" page for all topics, or\n          the page that is shown when no topic is selected */}\n      <Switch>\n        <Route path={`${match.path}/:topicId`}>\n          <Topic />\n        </Route>\n        <Route path={match.path}>\n          <h3>Please select a topic.</h3>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction Topic() {\n  let { topicId } = useParams();\n  return <h3>Requested topic ID: {topicId}</h3>;\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  '@global': {\n    \"div\": {\n      \"-ms-overflow-style\": \"none\",\n      \"scrollbar-width\": \"none\",\n    },\n    '*::-webkit-scrollbar': {\n      display: \"none\",\n    },\n  },\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import { Server } from \"miragejs\"\n\nvar server = new Server({\n  routes() {\n    this.namespace = \"/api\"\n\n    this.get(\"/service/files\", () => [\n      {\n        filename: 'file.csv',\n        size: 3271,\n      },\n      {\n        filename: 'there.csv',\n        size: 2310,\n      },\n      {\n        filename: 'down1/other.csv',\n        size: 7157,\n      },\n      {\n        filename: 'down1/down2/another.csv',\n        size: 56190,\n      },\n      {\n        filename: 'down1/down2/also.csv',\n        size: 4654,\n      },\n      {\n        filename: 'down1/down3/here.csv',\n        size: 12716,\n      },\n    ])\n  },\n})\n\nexport default server;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport Paperbase from './Paperbase';\nimport theme from './theme';\n\nimport server from './fakeserver';\nconsole.log(\"Using fake server\", server);\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <Paperbase />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}